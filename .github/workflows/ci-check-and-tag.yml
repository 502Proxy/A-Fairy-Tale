name: CI - Check Code and Tag Release Candidate

on:
  push:
    branches:
      - main # Oder 'develop', je nach deinem Branching-Modell

jobs:
  build-test-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Holt die komplette Historie

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22' 

      - name: Install Dependencies
        run: npm ci 



      - name: Create and Push SemVer Tag (Patch Increment)
        # Stelle sicher, dass der Checkout-Schritt 'fetch-depth: 0' hat, um alle Tags zu sehen:
        # uses: actions/checkout@v3
        # with:
        #   fetch-depth: 0
        run: |
          echo "Alle Checks bestanden. Erstelle SemVer-Tag..."
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

          LATEST_TAG=$(git tag -l 'v[0-9]*.[0-9]*.[0-9]*' --sort=-v:refname | head -n 1)

          if [ -z "$LATEST_TAG" ]; then
            NEW_TAG="v0.1.0"
            echo "Kein vorheriger SemVer-Tag gefunden. Starte mit $NEW_TAG"
          else
            echo "Letzter SemVer-Tag: $LATEST_TAG"
           
            VERSION=$(echo $LATEST_TAG | sed 's/^v//')
            
            MAJOR=$(echo $VERSION | cut -d. -f1)
            MINOR=$(echo $VERSION | cut -d. -f2)
            PATCH=$(echo $VERSION | cut -d. -f3)

            
            NEW_PATCH=$((PATCH + 1))
            NEW_TAG="v${MAJOR}.${MINOR}.${NEW_PATCH}"
            echo "NÃ¤chster Patch-Tag wird: $NEW_TAG"
          fi

          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "Tag $NEW_TAG erfolgreich erstellt und gepusht."
